[gd_scene load_steps=7 format=2]

[ext_resource path="res://fontes/CardenioModern-Bold.otf" type="DynamicFontData" id=1]
[ext_resource path="res://sprites/gui/NR_LogoPerfil.png" type="Texture" id=2]
[ext_resource path="res://sprites/gui/godot_splash.png" type="Texture" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

func _on_anim_animation_finished(anim_name):
	if anim_name == \"splash\":
		var _e = get_tree().change_scene(\"res://scenes/game/game_startScene.tscn\")
	pass
"

[sub_resource type="DynamicFont" id=2]
font_data = ExtResource( 1 )

[sub_resource type="Animation" id=3]
length = 7.5
tracks/0/type = "value"
tracks/0/path = NodePath("godot:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0.5, 1, 3, 3.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("logo:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 4, 4.5, 7, 7.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[node name="game_splashScreen" type="Node2D"]
script = SubResource( 1 )

[node name="godot" type="Sprite" parent="."]
modulate = Color( 1, 1, 1, 0 )
position = Vector2( 80, 72 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 3 )

[node name="logo" type="Node2D" parent="."]
modulate = Color( 1, 1, 1, 0 )

[node name="neverRight" type="Sprite" parent="logo"]
position = Vector2( 80, 60 )
scale = Vector2( 0.1, 0.1 )
texture = ExtResource( 2 )

[node name="name" type="Label" parent="logo"]
margin_top = 112.0
margin_right = 160.0
margin_bottom = 131.0
custom_fonts/font = SubResource( 2 )
text = "Never Right Studio"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="anim" type="AnimationPlayer" parent="."]
autoplay = "splash"
anims/splash = SubResource( 3 )
[connection signal="animation_finished" from="anim" to="." method="_on_anim_animation_finished"]
